# Some variables used to config this include-file.
variables:
  # Output directory.
  SF_DIR_BIN_MINGW: "bin/win64"
  # Fixed directory the source root is mounted to.
  SF_DIR_MOUNT_MINGW: "${BIND_DIR}\\${CI_COMMIT_SHORT_SHA}-mingw"

# Template to mount source root on a fixed directory path for Windows MinGW compiler.
.tpl-bind-mingw:
  before_script:
    - 'Write-Host (-Join ("Username=", [System.Security.Principal.WindowsIdentity]::GetCurrent().Name))'
    - 'Write-Host (-Join ("Working Directory=", (Get-Location).Path))'
    - 'Write-Host (Get-ChildItem Env: | Format-Table | Out-String)'
    # Log to Windows Event Log to be able to see execution flow.
    - 'Write-EventLog -LogName "Application" -Source "gitlab-runner" -EventID 1000 -EntryType Information -Message (-Join ("${SF_LOG_TAG} ", "Adding Symlink: ${SF_DIR_MOUNT_MINGW} =>", (Get-Location).Path))'
    # Remove the Windows symlink if it somehow remained.
    - 'If (Test-Path "${SF_DIR_MOUNT_MINGW}"){(Get-Item "${SF_DIR_MOUNT_MINGW}").Delete()}'
    # Symlink the current directory so the path is the same between jobs.
    - 'New-Item -ItemType SymbolicLink -Path "${SF_DIR_MOUNT_MINGW}" -Value (Get-Location).Path'
  after_script:
    # Log to Windows Event Log to be able to see execution flow.
    - 'Write-EventLog -LogName "Application" -Source "gitlab-runner" -EventID 1000 -EntryType Information -Message (-Join ("${SF_LOG_TAG} ", "Removing Symlink: ${SF_DIR_MOUNT_MINGW} =>", (Get-Location).Path))'
    # Remove the Windows symlink.
    - 'If (Test-Path "${SF_DIR_MOUNT_MINGW}"){(Get-Item "${SF_DIR_MOUNT_MINGW}").Delete()}'

# Template to configure cache for CMake generated files for the GW compiler.
.tpl-cache-mingw:
  cache:
    key: "${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHORT_SHA}-mingw"
    paths:
      - cmake-build-*/

# Template to define artifacts in the designated directory.
.tpl-artifacts-mingw:
  artifacts:
    name: "${CI_COMMIT_REF_NAME}-mingw"
    expire_in: 2 days
    paths:
      - "${SF_DIR_BIN_MINGW}"

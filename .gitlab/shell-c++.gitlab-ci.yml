# Some variables used to config this include-file.
variables:
  # Name of the branch that allows running deploying to production.
  SF_RELEASE_BRANCH_NAME: "main"
  # Fixed directory the source root is mounted to.
  SF_DIR_BIN_GNU: "bin/"
  SF_DIR_BIN_GW: "binwin/"
  # Fixed directory the source root is mounted to.
  DIR_MOUNT_GNU: "/tmp/build-gnu-${CI_COMMIT_SHORT_SHA}"
  SF_DIR_MOUNT_GW: "/tmp/build-gw-${CI_COMMIT_SHORT_SHA}"
  # Logger tag value.
  SF_LOG_TAG: "=== ${CI_JOB_NAME_SLUG}.${CI_COMMIT_SHORT_SHA}"
  SF_ARTIFACT_EXPIRE: "1 day"

# Template to dump all environment variables.
.tpl-env-dump:
  # Do not need the cache for this one.
  cache: []
  before_script:
    - logger  --tag "${SF_LOG_TAG}" "'$(pwd)'"
    - echo "Working Directory=$(pwd)"
    - echo "Environment Dump" && printenv
  script:
    - echo "..."

# Template to deploy only when having on the release branch.
.tpl-deploy:
  only:
    - "${SF_RELEASE_BRANCH_NAME}"

# Template for Linux GNU compiler only.
.tpl-gnu-comp:
  rules:
    # Detect Linux architecture of runner for GNU compiler only. (Variable cannot be quoted in 'if:' !)
    - if: $CI_RUNNER_EXECUTABLE_ARCH =~ "^linux/(arm64|amd64)$"

# Template for Linux GW compiler only.
.tpl-gw-comp:
  rules:
    # Detect Linux architecture of runner for GW compiler only. (Variable cannot be quoted in 'if:' !)
    - if: $CI_RUNNER_EXECUTABLE_ARCH == "linux/amd64"

# Template to reference to for the single script line only.
.tpl-log-script:
  script:
    # Log to syslog to be able to see execution flow.
    - logger --tag "${SF_LOG_TAG}" "Script => '$(pwd)'"

# Template to mount source root on a fixed directory path for Linux GNU compiler.
.tpl-bind-gnu:
  before_script:
    # Log to syslog to be able to see execution flow.
    - logger --tag "${SF_LOG_TAG}" "Mounting '${SF_DIR_MOUNT_GNU}' => '$(pwd)'"
    # Bind/Mount the current directory so the path is the same.
    - mkdir -p "${SF_DIR_MOUNT_GNU}" && bindfs ./ "${SF_DIR_MOUNT_GNU}"
  after_script:
    # Log to syslog to be able to see execution flow.
    - logger --tag "${SF_LOG_TAG}" "Unmounting '${SF_DIR_MOUNT_GNU}' =>  '$(pwd)'"
    # Unmount the bind directory.
    - fusermount -u "${SF_DIR_MOUNT_GNU}"

# Template to mount source root on a fixed directory path for Linux GW compiler.
.tpl-bind-gw:
  before_script:
    # Log to syslog to be able to see execution flow.
    - logger --tag "${SF_LOG_TAG}" "Mounting '${SF_DIR_MOUNT_GW}' =>  '$(pwd)'"
    # Bind/Mount the current directory so the path is the same.
    - mkdir -p "${SF_DIR_MOUNT_GW}" && bindfs ./ "${SF_DIR_MOUNT_GW}"
  after_script:
    # Log to syslog to be able to see execution flow.
    - logger --tag "${SF_LOG_TAG}" "Unmounting '${SF_DIR_MOUNT_GW}' =>  '$(pwd)'"
    # Unmount the bind directory.
    - fusermount -u "${SF_DIR_MOUNT_GW}"

# Template to configure cache for CMake.
.tpl-cache-gnu:
  cache:
    key: "${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHORT_SHA}-gnu"
    paths:
      - cmake-build-*/

.tpl-cache-gw:
  cache:
    key: "${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHORT_SHA}-gw"
    paths:
      - cmake-build-*/

.tpl-artifacts-gnu:
  artifacts:
    name: "${CI_COMMIT_REF_NAME}-gnu"
    expire_in: "${SF_ARTIFACT_EXPIRE}"
    paths:
      - "${DIR_BIN_GNU}"

.tpl-artifacts-gw:
  artifacts:
    name: "${CI_COMMIT_REF_NAME}-gw"
    expire_in: "${SF_ARTIFACT_EXPIRE}"
    paths:
      - "${DIR_BIN_GW}"

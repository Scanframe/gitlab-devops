variables:
  TEST_TARGET: "hello-world-test"
  RUN_TARGET: "hello-world"
  # Fixed directory the source root is mounted to.
  DIR_BIN_GNU: "bin/"
  DIR_BIN_GW: "binwin/"
  # Fixed directory the source root is mounted to.
  DIR_MOUNT_GNU: "/tmp/build-gnu-${CI_COMMIT_SHORT_SHA}"
  DIR_MOUNT_GW: "/tmp/build-gw-${CI_COMMIT_SHORT_SHA}"
  # Logger tag value.
  LOG_TAG: "=== ${CI_JOB_NAME_SLUG}.${CI_COMMIT_SHORT_SHA}"

# Order of stages for jobs to perform in.
stages:
  # Jobs checking the environment requirements.
  - check
  # Jobs producing makefiles using CMake
  - make
  # Jobs for building the actual run target and possible dynamic libraries using.
  - build
  # Jobs for building tests using dynamic libraries of the build.
  - build-test
  # Jobs executing the build (unit-)tests.
  - test
  # Jobs for deploying of stored artifacts.
  - deploy

# Template to dump all environment variables.
.tpl-env-dump:
  # Do not need the cache for this one.
  cache: []
  before_script:
    - logger  --tag "${LOG_TAG}" "'$(pwd)'"
    - echo "Working Directory=$(pwd)"
    - echo "Environment Dump" && env
  script:
    - echo "..."

# Template to reference to for the single script line only.
.tpl-log-script:
  script:
    # Log to syslog to be able to see execution flow.
    - logger --tag "${LOG_TAG}" "Script => '$(pwd)'"

# Template to mount source root on a fixed directory path for Linux GNU compiler.
.tpl-bind-gnu:
  before_script:
    # Log to syslog to be able to see execution flow.
    - logger --tag "${LOG_TAG}" "Mounting '${DIR_MOUNT_GNU}' => '$(pwd)'"
    # Bind/Mount the current directory so the path is the same.
    - mkdir -p "${DIR_MOUNT_GNU}" && bindfs ./ "${DIR_MOUNT_GNU}"
  after_script:
    # Log to syslog to be able to see execution flow.
    - logger --tag "${LOG_TAG}" "Unmounting '${DIR_MOUNT_GNU}' =>  '$(pwd)'"
    # Unmount the bind directory.
    - fusermount -u "${DIR_MOUNT_GNU}"

# Template to mount source root on a fixed directory path for Linux GW compiler.
.tpl-bind-gw:
  before_script:
    # Log to syslog to be able to see execution flow.
    - logger --tag "${LOG_TAG}" "Mounting '${DIR_MOUNT_GW}' =>  '$(pwd)'"
    # Bind/Mount the current directory so the path is the same.
    - mkdir -p "${DIR_MOUNT_GW}" && bindfs ./ "${DIR_MOUNT_GW}"
  after_script:
    # Log to syslog to be able to see execution flow.
    - logger --tag "${LOG_TAG}" "Unmounting '${DIR_MOUNT_GW}' =>  '$(pwd)'"
    # Unmount the bind directory.
    - fusermount -u "${DIR_MOUNT_GW}"

# Template to configure cache for CMake.
.tpl-cache-gnu:
  cache:
    key: "${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHORT_SHA}-gnu"
    paths:
      - cmake-build-*/

.tpl-cache-gw:
  cache:
    key: "${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHORT_SHA}-gw"
    paths:
      - cmake-build-*/

.tpl-artifacts-gnu:
  artifacts:
    name: "${CI_COMMIT_REF_NAME}-gnu"
    paths:
      - ${DIR_BIN_GNU}

.tpl-artifacts-gw:
  artifacts:
    name: "${CI_COMMIT_REF_NAME}-gw"
    paths:
      - ${DIR_BIN_GW}
